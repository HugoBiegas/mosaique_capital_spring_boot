# =================================================================
# DOCKER COMPOSE - MOSA√èQUE CAPITAL (100% CENTRALIS√â)
# =================================================================
# TOUTES les variables viennent du .env - AUCUN hardcod√©

services:
  # =================================================================
  # MYSQL - Base de donn√©es principale
  # =================================================================
  mysql:
    image: mysql:8.0.34
    container_name: mosaique-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: mosaique_capital
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "${DATABASE_PORT}:3306"  # Port externe configurable via .env
    volumes:
      # üóÑÔ∏è VOLUME LOCAL PERSISTANT (non versionn√©)
      - ./data/mysql:/var/lib/mysql
      # Script d'initialisation
      - ./docs/mosaique_capital.sql:/docker-entrypoint-initdb.d/init.sql:ro
      # Configuration MySQL personnalis√©e
      - ./docker/mysql/conf.d:/etc/mysql/conf.d:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - mosaique-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =================================================================
  # REDIS - Cache et blacklist des tokens JWT
  # =================================================================
  redis:
    image: redis:7.2-alpine
    container_name: mosaique-redis
    restart: unless-stopped
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --bind 0.0.0.0
      --protected-mode no
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      # üóÑÔ∏è VOLUME LOCAL PERSISTANT (non versionn√©)
      - ./data/redis:/data
      # Configuration Redis personnalis√©e
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mosaique-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =================================================================
  # SPRING BOOT APPLICATION - API principale
  # =================================================================
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}
    container_name: mosaique-app
    restart: unless-stopped
    environment:
      # Profil Spring - DEPUIS .env
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}

      # ‚úÖ CORRECTION : Port 3306 (port interne Docker) au lieu de 3307
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mosaique_capital?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=utf8&useUnicode=true
      SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver

      # JPA/Hibernate - DEPUIS .env
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${JPA_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${JPA_SHOW_SQL}
      # ‚úÖ CORRECTION : Utiliser MySQLDialect au lieu de MySQL8Dialect (d√©pr√©ci√©)
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true

      # Initialisation SQL
      SPRING_SQL_INIT_MODE: always
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: true
      SPRING_SQL_INIT_CONTINUE_ON_ERROR: true

      # Redis - DEPUIS .env
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SPRING_REDIS_DATABASE: ${REDIS_DATABASE}
      SPRING_REDIS_TIMEOUT: 2000ms
      SPRING_REDIS_JEDIS_POOL_MAX_ACTIVE: 8
      SPRING_REDIS_JEDIS_POOL_MAX_IDLE: 8
      SPRING_REDIS_JEDIS_POOL_MIN_IDLE: 0

      # JWT - DEPUIS .env
      APP_JWT_SECRET: ${JWT_SECRET}
      APP_JWT_EXPIRATION: ${JWT_EXPIRATION}
      APP_JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}

      # Configuration Banking Services
      APP_BANKING_BUDGET_INSIGHT_API_URL: ${APP_BANKING_BUDGET_INSIGHT_API_URL}
      APP_BANKING_BUDGET_INSIGHT_CLIENT_ID: ${APP_BANKING_BUDGET_INSIGHT_CLIENT_ID}
      APP_BANKING_BUDGET_INSIGHT_CLIENT_SECRET: ${APP_BANKING_BUDGET_INSIGHT_CLIENT_SECRET}
      APP_BANKING_BUDGET_INSIGHT_ENABLED: ${APP_BANKING_BUDGET_INSIGHT_ENABLED}
      APP_BANKING_BUDGET_INSIGHT_WEBHOOK_SECRET: ${APP_BANKING_BUDGET_INSIGHT_WEBHOOK_SECRET}

      APP_BANKING_LINXO_ENABLED: ${APP_BANKING_LINXO_ENABLED}
      APP_BANKING_LINXO_WEBHOOK_SECRET: ${APP_BANKING_LINXO_WEBHOOK_SECRET}

      APP_BANKING_DEFAULT_PROVIDER: ${APP_BANKING_DEFAULT_PROVIDER}
      APP_BANKING_TIMEOUT: ${APP_BANKING_TIMEOUT}
      APP_BANKING_CONNECTION_TIMEOUT: ${APP_BANKING_CONNECTION_TIMEOUT}
      APP_BANKING_REQUEST_TIMEOUT: ${APP_BANKING_REQUEST_TIMEOUT}

      APP_BANKING_ASYNC_CORE_POOL_SIZE: ${APP_BANKING_ASYNC_CORE_POOL_SIZE}
      APP_BANKING_ASYNC_MAX_POOL_SIZE: ${APP_BANKING_ASYNC_MAX_POOL_SIZE}
      APP_BANKING_ASYNC_QUEUE_CAPACITY: ${APP_BANKING_ASYNC_QUEUE_CAPACITY}

      APP_BANKING_SYNC_ENABLED: ${APP_BANKING_SYNC_ENABLED}
      APP_BANKING_SYNC_INTERVAL: ${APP_BANKING_SYNC_INTERVAL}
      APP_BANKING_SYNC_MAX_CONNECTIONS_PER_BATCH: ${APP_BANKING_SYNC_MAX_CONNECTIONS_PER_BATCH}
      APP_BANKING_SYNC_STALE_HOURS: ${APP_BANKING_SYNC_STALE_HOURS}


      # MFA - DEPUIS .env
      APP_MFA_ISSUER: ${MFA_ISSUER}

      # Serveur - DEPUIS .env
      SERVER_PORT: ${SERVER_PORT}

      # JVM - DEPUIS .env
      JAVA_OPTS: ${JAVA_OPTS}

      # Logging - DEPUIS .env
      LOGGING_LEVEL_ROOT: ${LOG_LEVEL_ROOT}
      LOGGING_LEVEL_COM_MASTER_MOSAIQUE_CAPITAL: ${LOG_LEVEL_APP}
    ports:
      - "${SERVER_PORT}:9999"
    volumes:
      # üìù LOGS LOCAUX PERSISTANTS (non versionn√©s)
      - ./data/logs:/app/logs
      # üìÅ Configuration externe optionnelle
      - ./docker/app/config:/app/config:ro
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - mosaique-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/actuator/health", "||", "exit", "1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 180s
    logging:
      driver: "json-file"
      options:
        max-size: "15m"
        max-file: "5"

  # =================================================================
  # REDIS COMMANDER - Interface web pour Redis (dev uniquement)
  # =================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mosaique-redis-ui
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD}
      - HTTP_USER=${REDIS_UI_USER}
      - HTTP_PASSWORD=${REDIS_UI_PASSWORD}
      - PORT=8081
    ports:
      - "${REDIS_UI_PORT}:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - mosaique-network
    profiles:
      - dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # =================================================================
  # ADMINER - Interface web pour MySQL (dev uniquement)
  # =================================================================
  adminer:
    image: adminer:4.8.1
    container_name: mosaique-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT}:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
      - ADMINER_DESIGN=pepa-linha
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - mosaique-network
    profiles:
      - dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # =================================================================
  # MAILHOG - Serveur mail de d√©veloppement (dev uniquement)
  # =================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mosaique-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT}:1025"  # SMTP
      - "${MAILHOG_WEB_PORT}:8025"   # Interface web
    networks:
      - mosaique-network
    profiles:
      - dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# =================================================================
# NETWORKS
# =================================================================
networks:
  mosaique-network:
    driver: bridge