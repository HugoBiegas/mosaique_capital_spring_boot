# =================================================================
# DOCKER COMPOSE - MOSAÏQUE CAPITAL (MySQL local)
# =================================================================
# Ce docker-compose utilise MySQL installé localement sur votre machine
# et lance seulement Redis + outils de développement

version: '3.8'

services:
  # =================================================================
  # REDIS - Cache et blacklist des tokens JWT
  # =================================================================
  redis:
    image: redis:7-alpine
    container_name: mosaique-redis
    restart: unless-stopped
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD:-mosaique_redis_2025}
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-mosaique_redis_2025}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - mosaique-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # =================================================================
  # REDIS COMMANDER - Interface web pour Redis (optionnel)
  # =================================================================
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mosaique-redis-ui
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-mosaique_redis_2025}
      - HTTP_USER=${REDIS_UI_USER:-admin}
      - HTTP_PASSWORD=${REDIS_UI_PASSWORD:-admin123}
      - PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - mosaique-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # =================================================================
  # ADMINER - Interface web pour MySQL local (optionnel)
  # =================================================================
  adminer:
    image: adminer:4.8.1
    container_name: mosaique-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=host.docker.internal:3306
      - ADMINER_DESIGN=pepa-linha
    networks:
      - mosaique-network
    # Pour accéder à MySQL local depuis le conteneur
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # =================================================================
  # MAILHOG - Serveur mail de développement (optionnel)
  # =================================================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mosaique-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Interface web
    networks:
      - mosaique-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# =================================================================
# VOLUMES
# =================================================================
volumes:
  redis_data:
    driver: local
    name: mosaique_redis_data

# =================================================================
# NETWORKS
# =================================================================
networks:
  mosaique-network:
    driver: bridge
    name: mosaique_network
    ipam:
      config:
        - subnet: 172.20.0.0/16