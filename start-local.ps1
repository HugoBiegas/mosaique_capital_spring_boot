# =================================================================
# SCRIPT DE D√âMARRAGE LOCAL WINDOWS - MOSA√èQUE CAPITAL
# =================================================================
# Usage: .\start-local.ps1

param(
    [switch]$SkipCompile
)

# Configuration des couleurs
$Host.UI.RawUI.WindowTitle = "Mosa√Øque Capital - D√©marrage Local"

Write-Host "===================================================================" -ForegroundColor Blue
Write-Host "              MOSA√èQUE CAPITAL - D√âMARRAGE LOCAL" -ForegroundColor Blue
Write-Host "===================================================================" -ForegroundColor Blue

# V√©rifier si le fichier .env existe
if (-not (Test-Path ".env")) {
    Write-Host "‚ùå Fichier .env non trouv√© !" -ForegroundColor Red
    Write-Host "üí° Copiez .env.example vers .env et configurez vos variables" -ForegroundColor Yellow
    exit 1
}

# Charger les variables d'environnement depuis .env
Write-Host "üîß Chargement des variables d'environnement..." -ForegroundColor Blue

Get-Content .env | ForEach-Object {
    if ($_ -match '^([^#].*)=(.*)$') {
        $name = $matches[1].Trim()
        $value = $matches[2].Trim()

        # Enlever les guillemets si pr√©sents
        if ($value.StartsWith('"') -and $value.EndsWith('"')) {
            $value = $value.Substring(1, $value.Length - 2)
        }

        [System.Environment]::SetEnvironmentVariable($name, $value, "Process")
        Write-Host "   ‚úì $name" -ForegroundColor Green
    }
}

Write-Host "‚úÖ Variables d'environnement charg√©es" -ForegroundColor Green

# V√©rifier les variables critiques
Write-Host "üîç V√©rification des variables critiques..." -ForegroundColor Blue
$criticalVars = @("APP_JWT_SECRET", "SPRING_DATASOURCE_PASSWORD")
$missingVars = @()

foreach ($var in $criticalVars) {
    $value = [System.Environment]::GetEnvironmentVariable($var, "Process")
    if ([string]::IsNullOrEmpty($value)) {
        $missingVars += $var
    }
}

if ($missingVars.Count -gt 0) {
    Write-Host "‚ùå Variables manquantes dans .env : $($missingVars -join ', ')" -ForegroundColor Red
    exit 1
}

Write-Host "‚úÖ Variables critiques valid√©es" -ForegroundColor Green

# Afficher la configuration
Write-Host "üìã Configuration d√©tect√©e :" -ForegroundColor Blue
$profile = [System.Environment]::GetEnvironmentVariable("SPRING_PROFILES_ACTIVE", "Process")
$port = [System.Environment]::GetEnvironmentVariable("SERVER_PORT", "Process")
$dbUrl = [System.Environment]::GetEnvironmentVariable("SPRING_DATASOURCE_URL", "Process")
$redisHost = [System.Environment]::GetEnvironmentVariable("SPRING_REDIS_HOST", "Process")
$redisPort = [System.Environment]::GetEnvironmentVariable("SPRING_REDIS_PORT", "Process")

Write-Host "   - Profil Spring: $($profile ?? 'dev')" -ForegroundColor Cyan
Write-Host "   - Port serveur: $($port ?? '9999')" -ForegroundColor Cyan
Write-Host "   - Base de donn√©es: $($dbUrl ?? 'Non d√©finie')" -ForegroundColor Cyan
Write-Host "   - Redis: $($redisHost ?? 'localhost'):$($redisPort ?? '6379')" -ForegroundColor Cyan

# Nettoyer et compiler si demand√©
if (-not $SkipCompile) {
    Write-Host "üßπ Nettoyage et compilation..." -ForegroundColor Blue
    & .\mvnw.cmd clean compile
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de la compilation" -ForegroundColor Red
        exit 1
    }
}

# D√©marrer l'application
Write-Host "üöÄ D√©marrage de l'application Spring Boot..." -ForegroundColor Green
Write-Host "   Pour arr√™ter : Ctrl+C" -ForegroundColor Yellow
Write-Host ""

& .\mvnw.cmd spring-boot:run